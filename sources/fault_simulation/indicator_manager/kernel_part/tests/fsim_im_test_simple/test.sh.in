#! /bin/sh

module_name="fsim_im_test_simple"
module="@CMAKE_CURRENT_BINARY_DIR@/${module_name}.ko"

fsim_base_module="@CMAKE_BINARY_DIR@/fault_simulation/base/kedr_fsim_base.ko"
#need for indicator manager - module_in_init 
kedr_base_module="@CMAKE_BINARY_DIR@/base/kedr_base.ko"
#need for indicator manager - connection with user space
sc_module="@CMAKE_BINARY_DIR@/syscall_connector/kernel_part/kedr_syscall_connector.ko"
fsim_im_module="@CMAKE_BINARY_DIR@/fault_simulation/indicator_manager/kernel_part/kedr_fsim_indicator_manager.ko"

result_file="/sys/module/$module_name/parameters/result"

insmod "$fsim_base_module"
if test $? -ne 0; then
    printf "Cannot load fault simulation base module into kernel.\n"
    exit 1
fi

insmod "$kedr_base_module"
if test $? -ne 0; then
    printf "Cannot load kedr_base module into kernel.\n"
    rmmod "$fsim_base_module"
    exit 1
fi

insmod "$sc_module"
if test $? -ne 0; then
    printf "Cannot load syscall connector module into kernel.\n"
    rmmod "$kedr_base_module"
    rmmod "$fsim_base_module"
    exit 1
fi


insmod "$fsim_im_module"
if test $? -ne 0; then
    printf "Cannot load fault simulation indicator manager module into kernel.\n"
    rmmod "$sc_module"
    rmmod "$kedr_base_module"
    rmmod "$fsim_base_module"
    exit 1
fi

insmod "$module"
if test $? -ne 0; then
    printf "Cannot load fault module for test into kernel.\n"
    rmmod "$fsim_im_module"
    rmmod "$sc_module"
    rmmod "$kedr_base_module"
    rmmod "$fsim_base_module"
    exit 1
fi


result=`cat "$result_file"`


rmmod "$module"
if test $? -ne 0; then
    printf "Fail to unload module for test.\n"
    rmmod "$fsim_im_module"
    rmmod "$sc_module"
    rmmod "$kedr_base_module"
    rmmod "$fsim_base_module"

    exit 1
fi

rmmod "$fsim_im_module"
if test $? -ne 0; then
    printf "Failt to unload fault simulation indicator manager module.\n"
    rmmod "$sc_module"
    rmmod "$kedr_base_module"
    rmmod "$fsim_base_module"
    exit 1
fi

rmmod "$sc_module"
if test $? -ne 0; then
    printf "Fail to unload syscall connector module.\n"
    rmmod "$kedr_base_module"
    rmmod "$fsim_base_module"
    exit 1
fi


rmmod "$kedr_base_module"
if test $? -ne 0; then
    printf "Fail to unload kedr_base module.\n"
    rmmod "$fsim_base_module"
    exit 1
fi

rmmod "$fsim_base_module"
if test $? -ne 0; then
    printf "Failt to unload fault simulation base module.\n"
    exit 1
fi

if test "$result" != "Ok"; then
    printf "Expected that function set result parameter to \"Ok\", but it is \"%s\".\n" "$result"
    exit 1
fi



