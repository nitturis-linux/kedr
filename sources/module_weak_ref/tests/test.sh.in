#!/bin/sh

# ./test.sh load_only|ref|unref|wait

module_a_name="module_weak_ref_test_a"
module_a="@CMAKE_CURRENT_BINARY_DIR@/module_a/${module_a_name}.ko"
module_b="@CMAKE_CURRENT_BINARY_DIR@/module_b/module_weak_ref_test_b.ko"
current_value_file="/sys/module/${module_a_name}/parameters/current_value"

#Simple case is short
if test "$1" == "load_only";then
    if ! insmod "$module_a"; then
        printf "Cannot load module, which initialized module_weak_ref functionality."
        exit 1
    fi
    if ! rmmod "$module_a"; then
        printf "Error occures while unload module, which use module_weak_ref functionality."
        exit 1
    fi
    exit 0
fi


device=kedr_test_device
char_device_script="sh @CMAKE_BINARY_DIR@/tests/scripts/char_device.sh"

commands_file="@CMAKE_CURRENT_BINARY_DIR@/commands"
do_commands_script="sh @CMAKE_BINARY_DIR@/tests/scripts/do_commands.sh"

cat > "$commands_file" << eof

on_load insmod "$module_a" || ! printf "Cannot load module 'a' into kernel.\n"
on_unload rmmod "$module_a" || ! printf "Fail to unload module 'a'.\n"
on_load $char_device_script "$device" create || ! printf "Cannot create file for use character device.\n"
on_unload $char_device_script "$device" delete || ! printf "Cannot delete file for use character device.\n"
#
on_load insmod "$module_b" || ! printf "Cannot load module 'b' into kernel.\n"
#this module will be unload manually(this is main part of the test)

eof

if ! $do_commands_script "$commands_file" load; then
    printf "Cannot initialize test.\n"
    exit 1
fi

case "$1" in
ref)
    rmmod "$module_b"
    current_value=`cat "$current_value_file"`
    ;;
unref)
    dd "if=/dev/$device" of=/dev/null bs=1 count=1
    rmmod "$module_b"
    current_value=`cat "$current_value_file"`
    ;;
wait)
    dd "of=/dev/$device" if=/dev/zero bs=1 count=1
    #rmmod in the background - it will wait on mutex
    rmmod "$module_b" &

    dd "if=/dev/$device" of=/dev/null bs=1 count=1

    current_value=`cat "$current_value_file"`

    wait

    ;;
*)
    printf "Incorrect mode for test: '%s', should be 'load_only', 'ref', 'unref' or 'wait'\n" "$1"
    rmmod "$module_b"
    $do_commands_script "$commands_file" unload
    exit 1
esac

if ! $do_commands_script "$commands_file" unload; then
    printf "Error occures while finalize test.\n"
    exit 1
fi


if test "$current_value" != "0"; then
    printf "Expected, that after unloading module b 'current_value' will be '0', but it is '%s'" "$current_value"
    exit 1
fi