[group]
	# Name and return type of the target function
	function.name = kfree

	# Names and types of the arguments of the target function
	arg.type = void*
	arg.name = p
	
	# The body of the replacement function
	handler.pre =>>
	/* This is done before actually calling kfree(), because once the 
	 * memory block pointed to by 'p' is freed, some other CPU might 
	 * call an allocation function, get this address as a result and
	 * add it to the storage before klc_handle_free() is called
	 * below, which would make a mess. */
	if (!ZERO_OR_NULL_PTR(p)) 
		klc_handle_free(p, stack_depth, caller_address);
	<<

# End of the group of definitions for kfree().

#######################################################################
