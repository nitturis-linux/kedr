[group]
	# Name and return type of the target function
	function.name = call_rcu

	# Names and types of the arguments of the target function
	arg.type = struct rcu_head *
	arg.name = head

	arg.type = kedr_rcu_callback_type
	arg.name = func
	
	handler.pre =>>
	/* If a small value (less than KEDR_RCU_ADDRESS_LIMIT) is passed 
	 * to call_rcu*() instead of the address of a callback, treat it 
	 * as the offset of 'rcu_head' field in the containing structure
	 * and record 'free' operation for that structure. Note that this 
	 * operation may actually happen a bit later, after the grace 
	 * period expires, we just record it now, for simplicity. */
	unsigned long offset = (unsigned long)func;
	if (offset < KEDR_RCU_ADDRESS_LIMIT) 
		klc_handle_free((void *)((unsigned long)head - offset), 
			stack_depth, caller_address);
	<<
# End of the group of definitions for call_rcu().

#######################################################################
