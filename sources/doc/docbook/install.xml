<section id="overview">
<title>Overview</title>

<section id="install.t2c">
<title>Installing T2C</title>
<para>
The latest stable version of T2C as well as the development versions can be found at <ulink url="&t2c-url;"><quote>Template&ndash;to&ndash;Code</quote> project site at SourceForge.net</ulink>
</para>

<orderedlist>
<para>
On Linux (and on MS&nbsp;Windows with <ulink url="&msys-url;">MSYS</ulink> and <ulink url="&mingw-url;">MinGW</ulink>), T2C can be set up as follows.
</para>
<listitem>
<para>
Unpack the archive with T2C distribution (<replaceable>&lt;version&gt;</replaceable> is the version of T2C, like <code>2.0.0_final</code>):
</para>

<programlisting><![CDATA[
tar xfj t2c-<version>.tar.bz2
]]></programlisting>

<para>
and change current directory to <filename class='directory'>t2c-&lt;version&gt;</filename>
</para>
</listitem>

<listitem>
<para>
Configure the package:
</para>

<programlisting><![CDATA[
./configure
]]></programlisting>

<para>
By default, the package will be configured to install T2C to <filename class='directory'>/usr/local/</filename>. If you want to install T2C to some other location (<replaceable>t2c_install_directory</replaceable>), configure the package as follows:
</para>

<programlisting><![CDATA[
./configure --prefix <t2c_install_directory>
]]></programlisting>
</listitem>

<listitem>
<para>
If configuration process has completed successfully, you can now build T2C:
</para>

<programlisting><![CDATA[
make
]]></programlisting>

<para>
and then install it with 
</para>

<programlisting><![CDATA[
make install
]]></programlisting>

<para>
You may need to execute the last command as root user if your current user does not have appropriate permissions on the installation directory.
</para>
</listitem>
</orderedlist>

<para>
T2C file generator (<command>t2c</command>) should now be installed to <filename class='directory'>&lt;prefix&gt;/bin</filename>, default templates and T2C&nbsp;API libraries&nbsp;&ndash; to <filename class='directory'>&lt;prefix&gt;/share/t2c</filename>, man page&nbsp;&ndash; to <filename class='directory'>&lt;prefix&gt;/share/man</filename>.
</para>

<para>
As it was mentioned above, the prefix is <filename class='directory'>/usr/local</filename> by default and can be changed using <command>&ndash;&ndash;prefix</command> option of <command>configure</command>.
</para>

<para>
If you later want to uninstall T2C, execute
</para>

<programlisting><![CDATA[
make uninstall
]]></programlisting>

<para>
To see a short summary of command line options of <command>t2c</command>, execute
</para>

<programlisting><![CDATA[
t2c --help
]]></programlisting>

</section> <!-- "install.t2c" -->

<section id="install.kompozer">
<title>Installing KompoZer</title>

<orderedlist>
<listitem><para>
Download appropriate KompoZer distribution for your operating system from <ulink url="&kompozer-url;">&kompozer-url;</ulink>.
</para> 
<para>
For Linux, it is usually a .tar.gz archive. For some Linux distros, RPM packages are also available.
</para>
<important><para>
Please note: the authors of KompoZer warned that KompoZer&nbsp;0.7.x may crash on Linux with GTK+&nbsp;2.14 or newer, that is, on many modern Linux distributions. You should use KompoZer&nbsp;0.8.x or newer there instead.
</para></important>
</listitem>

<listitem><para>
Unpack the archive to the directory you want KompoZer to be installed to. After that, you can find <command>kompozer</command> script in <filename class='directory'>kompozer/</filename> subdirectory of that directory. Now you can execute that script to launch KompoZer.
</para></listitem>

<listitem>
<para>
When ReqMarkup plugin is installed, among other things, it adds several buttons to the toolbar in KompoZer window. The toolbar is sometimes not wide enough to provide space for all necessary buttons, so it can be helpful to remove some buttons and/or separators from there. 
</para>
<para>
You can customize the set of buttons placed on the toolbar and adjust their position by right-clicking the toolbar and selecting <quote>Customize toolbar</quote>. Then you can, for example, remove the buttons you do not need from the toolbar. 
</para>
</listitem>

</orderedlist>
</section> <!-- "install.kompozer" -->

<section id="install.reqmarkup">
<title>Installing ReqMarkup</title>

<orderedlist>
<listitem><para>
Download ReqMarkup plugin for KompoZer from <ulink url="&reqmarkup-url;">&reqmarkup-url;</ulink>.
</para>

    <itemizedlist>
    <para>
The archive (<filename>reqmarkup-&lt;version&gt;.tgz</filename>, for example <filename>reqmarkup-1.0.1b4.tgz</filename>) contains two main components:
    </para>
    <listitem><para>
the plugin itself: <filename>reqmarkup-&lt;version&gt;.xpi</filename>;
    </para></listitem>
    <listitem><para>
<filename>reqtools.js</filename> (see <filename class='directory'>reqtools_for_browser/</filename> subdirectory)&nbsp;&ndash; this script provides a set of utilities helpful when viewing the documentation with marked up requirements in a web browser (works with Firefox, Opera and Internet Explorer, may not work in other browsers though).
    </para></listitem>
    </itemizedlist>

</listitem>

<listitem><para>
Install ReqMarkup plugin. To do this, start KompoZer, select <quote>Tools</quote>, <quote>Add-ons</quote> in the main menu. Ensure that <quote>Extensions</quote> is selected, press <quote>Install&hellip;</quote>, select <filename>reqmarkup-&lt;version&gt;.xpi</filename> in the appeared dialog and press <quote>Open</quote>. KompoZer may complain that the extension is unsigned, that is OK for now. Press <quote>Install now</quote> button when it is finally enabled (usually in 2 or 3 seconds). You will be asked to restart KompoZer to complete the installation process.
</para></listitem>

<listitem><para>
After KompoZer is restarted, please check if the following buttons have appeared on its toolbar: <quote>Assign REQ&hellip;</quote>, <quote>Show Template</quote>, <quote>Highlight REQ</quote>, <quote>Remove Markup</quote>, <quote>Catalogue of Reqs</quote>, <quote>Defines</quote>.
</para></listitem>
</orderedlist>

<para>
You should now be able to mark up the requirements in the documents in HTML format in KompoZer. There can be a small problem though. ReqMarkup uses Ctrl+R keyboard shortcut for <quote>Assign REQ</quote> command but this shortcut is reserved for <quote>Revert</quote> command by KompoZer. Unfortunately, KompoZer (as of version 0.8&nbsp;beta1) provides no visible means to reassign keyboard shortcuts via its GUI.
</para>

<note><para>
This concerns keyboard shortcuts only, <quote>Assign REQ</quote> button on the toolbar and the command in the context menu should work.
</para></note>

<orderedlist>
<para>
If you would like to use Ctrl+R for <quote>Assign REQ</quote> command anyway, you could do the following.
</para>

<listitem><para>
Find <filename>comm.jar</filename> file in <filename class='directory'>kompozer/chrome/</filename> subdirectory. It is in fact a zip archive. Unpack it to some temporary location, say, <filename class='directory'>~/temp</filename>.
</para></listitem>

<listitem><para>
Open <filename>~/temp/content/editor/editor.xul</filename> in a text editor. Find the following text (the number of spaces between its parts may differ):</para>
<programlisting><![CDATA[
<key id="revertkb"            key="&filerevert.keybinding;" 
    observes="cmd_revert"     modifiers="accel"/>
]]></programlisting>
</listitem>

<listitem><para>
Replace <code>modifiers=&quot;accel&quot;</code> with<code> modifiers=&quot;accel,shift&quot;</code> (thus <quote>Revert</quote> command will be assigned Shift+Ctrl+R shortcut key)
</para></listitem>

<listitem><para>
Replace <filename>editor.xul</filename> in the archive with this modified version. Replace the original <filename>comm.jar</filename> with the repacked archive.
</para></listitem>

<listitem><para>
Now that Ctrl+R is not assigned by KompoZer itself, ReqMarkup will automatically associate <quote>Assign REQ</quote> command with it.
</para></listitem>
</orderedlist>

</section> <!-- "install.reqmarkup" -->
</section>
