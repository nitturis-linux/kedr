<section id="standard_fsim_payloads">
<title>Standard Fault Simulation Payloads</title>

<section id="standard_fsim_payloads.functions">
<title>Functions Processed by the Standard Payload Modules for Fault Simulation</title>
    <para>
Here is a full list of the payload modules that currently can be used for fault simulation, and the lists of the functions for which fault simulation is implemented by each module. For each function, the parameters that can be used in a fault simulation scenario are described.
    </para>
    <para>
A function name in square brackets indicates that this function may or may not be exported on each particular system, and if it is exported, it will be processed. Only one of the functions separated by a slash is expected to be exported by the kernel, that function will be processed.
    </para>
    <para>
Unless the opposite is stated explicitly, the name of the fault simulation point is the same as the name of the target function this point is used for.
    </para>
    
<itemizedlist mark='circle'>
<listitem><phrase role="emphasized">kedr_fsim_capable.ko</phrase>
    <simplelist type='vert'>
    <member><function>capable</function></member>
    </simplelist>
    Fault simulation point for this function provides <varname>cap</varname> parameter of type <type>int</type> for a fault simulation scenario.
</listitem>
<listitem><phrase role="emphasized">kedr_fsim_user_space_access.ko</phrase>
    <simplelist type='vert'>
    <member>
    <function>copy_to_user</function>/<function>_copy_to_user</function>; no matter which of these functions is exported by the kernel, the name of the fault simulation point is <filename>copy_to_user</filename>
    </member>
    <member>
    <function>copy_from_user</function>/<function>_copy_from_user</function>; no matter which of these functions is exported by the kernel, the name of the fault simulation point is <filename>copy_from_user</filename>
    </member>
    <member><function>strndup_user</function></member>
    <member><function>memdup_user</function></member>
    </simplelist>
    Fault simulation points for these functions do not provide additional parameters for a fault simulation scenario.
</listitem>
<listitem><phrase role="emphasized">kedr_fsim_cmm.ko</phrase>
    <simplelist type='vert'>
    <member><function>__kmalloc</function></member>
    <member><function>krealloc</function></member>
    <member><function>__krealloc</function></member>
    <member><function>kmem_cache_alloc</function></member>
    <member>[<function>kmem_cache_alloc_notrace</function>]</member>
    <member>[<function>kmem_cache_alloc_trace</function>]</member>
    <member><function>__get_free_pages</function></member>
    <member><function>get_zeroed_page</function></member>
    <member>[<function>__kmalloc_node</function>]</member>
    <member>[<function>kmem_cache_alloc_node</function>]</member>
    <member>[<function>kmem_cache_alloc_node_notrace</function>]</member>
    <member>[<function>kmem_cache_alloc_node_trace</function>]</member>
    <member>[<function>__alloc_pages_nodemask</function>]</member>
    <member>[<function>alloc_pages_current</function>]</member>
    <member>[<function>alloc_pages_exact</function>]</member>
    </simplelist>
    All these functions use a shared fault simulation point named <filename>kmalloc</filename> that provides the following parameters for a fault simulation scenario: <varname>size</varname> (of type <type>size_t</type>) and <varname>flags</varname> (of type <type>gfp_t</type>).
</listitem>
<listitem><phrase role="emphasized">kedr_fsim_mem_util.ko</phrase>
    <simplelist type='vert'>
    <member><function>kstrdup</function></member>
    <member><function>kstrndup</function></member>
    <member><function>kmemdup</function></member>
    </simplelist>
    Fault simulation points for these functions do not provide additional parameters for a fault simulation scenario.
</listitem>
<listitem><phrase role="emphasized">kedr_fsim_vmm.ko</phrase>
    <simplelist type='vert'>
    <member><function>vmalloc</function></member>
    <member><function>__vmalloc</function></member>
    <member><function>vmalloc_user</function></member>
    <member><function>vmalloc_node</function></member>
    <member><function>vmalloc_32</function></member>
    <member><function>vmalloc_32_user</function></member>
    </simplelist>
    All these functions use a shared fault simulation point named <filename>vmalloc</filename> that provides no additional parameters for a fault simulation scenario.
</listitem>
</itemizedlist>

</section>
</section>