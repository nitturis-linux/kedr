KEDR Documentation - Developer's Guide
--------------------------------------

1. Overview

KEDR documentation is generated from XML files in DocBook format (see 
"docbook" subdirectory). In addition, "html" subdirectory contains already 
prepared documentation set for the latest release of KEDR.

The documentation is not generated by default. To turn on generation of the 
docs, you should define some parameters at the configuration stage (see 
below).

========================================================================
2. Confguring the package and generating the docs

If KEDR_GENERATE_DOC parameter is defined when cmake is called, HTML 
documentation will be generated from DocBook sources when 'make' or 
'make doc' is executed. 

Otherwise the stored version of the docs will be simply copied to the build 
tree, ready to be installed. 

[NB] 'make install' simply installs the docs from the build tree.

To generate the docs, 'xsltproc' tool is necessary. It is usually provided 
by a package like 'libxslt' or something similar.

Besides that, the DocBook DTD (version 4.5 is recommended) and 
appropriate XSL stylesheets are also necessary. 

DocBook DTD can be provided by a package like "docbook". It can also be 
downloaded from the official site: 
http://www.docbook.org/xml/4.5/docbook-xml-4.5.zip

The XSL stylesheets are needed to generate the docs in the required format 
(HTML, etc.) from DocBook XML files. They can come from a package named 
"docbook-xsl-stylesheets" or in some similar way. You can also download the 
latest version from http://sourceforge.net/projects/docbook/files/.

Look for docbook-xsl-<version>.tar.bz2. 
DO NOT confuse it with docbook-xsl-doc-<version>.tar.bz2, you don't need 
the latter.

As it is difficult to guess where these DTD and XSL files can be found on 
the user's system, the following is done at the configuration stage.

If 'DOCBOOK_DTD_FILE' is defined, it should be the path to the DTD file,
otherwise "${CMAKE_SOURCE_DIR}/../dtd/docbookx.dtd" is used.
 
If 'DOCBOOK_XSL_PATH' is defined, the XSL stylesheets are loaded from
"${DOCBOOK_XSL_PATH}/html/" directory, otherwise from 
"${CMAKE_SOURCE_DIR}/../xsl/html/"
 
Example command:
cmake \
   -DCMAKE_INSTALL_PREFIX=/home/tester/temp \
   -DKEDR_GENERATE_DOC:BOOL=TRUE \
   -DDOCBOOK_DTD_FILE:FILEPATH=/usr/share/xml/docbook/schema/dtd/4.5/docbookx.dtd \
   -DDOCBOOK_XSL_PATH:PATH=/usr/share/xml/docbook/stylesheet/nwalsh/1.75.2 \
   ../kedr-current/sources/

If you make appropriate symlinks, you could avoid setting DOCBOOK_DTD_FILE
and DOCBOOK_XSL_PATH:
(in the directory where "sources" and "other" subdirectories are located)

ln -s /usr/share/xml/docbook/schema/dtd/4.5 dtd
ln -s /usr/share/xml/docbook/stylesheet/nwalsh/1.75.2 xsl

Now you can get away with a much shorter command:
cmake \
   -DCMAKE_INSTALL_PREFIX=/home/tester/temp \
   -DKEDR_GENERATE_DOC:BOOL=TRUE \
   ../kedr-current/sources/

After the package is configured to generate the docs, 'make doc' (or just 
'make') will do the work.

[NB] The generated docs will be placed to ${CMAKE_BINARY_DIR}/doc/html/
========================================================================

3. Adding to the docs
First of all, it is assumed that you have some experience with DocBook. If 
not, there are plenty of tutorials on the Net for this. 

The official definitive guide could also be of help as a reference manual.
(http://www.oasis-open.org/docbook/documentation/reference/)

A portion of the docs (a chapter, a group of sections or the like) can be 
provided in an XML file in "docbook" subdirectory. 

The file should have a descriptive name like "overview.xml", 
"tips_and_tricks.xml" or the like. The name of the file may contain 
lowercase latin letters, digits, dots, hyphens and underscores. It is not 
recommended to use other characters there.

To actually include that new XML file in the docs, you can do the following 
(assume you are going to add overview.xml).

[1] Open main.xml.cmake and find a sequence of lines like the following one 
at the beginning of that file:
    <!ENTITY kedr-install SYSTEM "install.xml">

[2] Add a line 
    <!ENTITY kedr-overview SYSTEM "overview.xml">
above all other lines of this kind but below 
    <!ENTITY % kedr-entities SYSTEM "entities.xml"> %kedr-entities; 

[NB] Actually, you may place your ENTITY declaration on some other 
position, not necessarily the topmost one. The point is, it should go 
before any other entity for a file that refers to your file.

[3] Now you can place "&kedr-overview;" (without quotes) in any of xml 
files (or in main.xml.cmake from which main.xml will be generated) at the 
place you want the contents of your file to be included. 

You can use "&kedr-overview;" as many times as you want to, in one file or 
in several files, etc.
========================================================================

4. Shortcut entities for commonly used items

See entities.xml.cmake for the examples.

For instance, assume you place the following in that file:

<!ENTITY ispras-url "http://www.ispras.ru/en/">

Than you can use "&ispras-url;" in your DocBook sources instead of 
"http://www.ispras.ru/en/"

You can use entities not only for URLs but rather for almost any data.
========================================================================
