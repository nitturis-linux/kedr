#! /bin/sh

# Test kedr_capture_trace functionality(no block, no session modes).

@multi_kernel_KERNEL_VAR_SHELL_DEFINITION@

kedr_module_name="@KEDR_CORE_NAME@"
kedr_trace_module_name="@KEDR_TRACE_NAME@"
payload_module_name=kedr_payload
payload_module="payload/${KERNEL}/${payload_module_name}.ko"
target_module_name=kedr_target
target_module="target/${KERNEL}/${target_module_name}.ko"


tmpdir="@KEDR_TEST_PREFIX_TEMP_SESSION@/capture_trace"

trace_file1="${tmpdir}/trace1"
trace_file2="${tmpdir}/trace2"
mkdir -p "${tmpdir}"

debugfs_mount_point="${tmpdir}/debugfs"
mkdir -p "${debugfs_mount_point}"

capture_trace_program="@CAPTURE_TRACE_PROGRAM@"

# Load KEDR core and payload modules
@KEDR_CORE_LOAD_COMMAND@ "target_name=${target_module_name}"
if test $? -ne 0; then
	printf "Failed to load KEDR core module for tests\n"
	exit 1
fi

@KEDR_TRACE_LOAD_COMMAND@
if test $? -ne 0; then
	printf "Failed to load kedr tracing module for tests\n"
    @RMMOD@ "${kedr_module_name}"
	exit 1
fi


@INSMOD@ "${payload_module}"
if test $? -ne 0; then
	printf "Failed to load payload module for tests\n"
    @RMMOD@ "${kedr_trace_module_name}"
    @RMMOD@ "${kedr_module_name}"
	exit 1
fi

# Load target module
@INSMOD@ "${target_module}"

if test $? -ne 0; then
    printf "Failed to load target module\n"
    @RMMOD@ "${payload_module_name}"
    @RMMOD@ "${kedr_trace_module_name}"
    @RMMOD@ "${kedr_module_name}"
    exit 1
fi

mkdir -p "${debugfs_mount_point}"
mount debugfs -t debugfs "${debugfs_mount_point}"
if test $? -ne 0; then
    printf "Cannot mount debugfs.\n"
    @RMMOD@ "${target_module}"
    @RMMOD@ "${payload_module_name}"
    @RMMOD@ "${kedr_trace_module_name}"
    @RMMOD@ "${kedr_module_name}"
    exit 1
fi

# Capture trace for module loading
rm -f "${trace_file1}"
${capture_trace_program} -d "${debugfs_mount_point}" -f "${trace_file1}"

# Unload target module
@RMMOD@ "${target_module_name}"

# Capture trace for module unloading
rm -f "${trace_file2}"
${capture_trace_program} -d "${debugfs_mount_point}" -f "${trace_file2}"


umount "${debugfs_mount_point}"

#Unload payload and KEDR core and other modules
@RMMOD@ "${payload_module_name}"
@RMMOD@ "${kedr_trace_module_name}"
@RMMOD@ "${kedr_module_name}"

#Verify existance of both trace files
for trace_file in "${trace_file1}" "${trace_file2}"; do
    if ! test -f "${trace_file}"; then
        printf "Trace file %s wasn't created, but it should\n" "${trace_file}"
        exit 1
    fi
done
#Verify that both trace files contain some strings output by the payload
for trace_file in "${trace_file1}" "${trace_file2}"; do
    if ! grep "Capture me payload 2" "${trace_file}" > /dev/null; then
        printf "Module output a line to the trace but that line was not captured in file %s\n" "${trace_file}"
        exit 1
    fi
done
# Implementation specific!
#Verify, that first trace contain message about load of the target
if ! grep "target_session_begins" "${trace_file1}" > /dev/null; then
    printf "Beginning mark wasn't captured in file %s\n" "${trace_file1}"
    exit 1
fi

#Verify, that trace contain message about unload of the target
if ! grep "target_session_ends" "${trace_file2}" > /dev/null; then
    printf "Ending mark wasn't captured in file %s\n" "${trace_file2}"
    exit 1
fi

exit 0
