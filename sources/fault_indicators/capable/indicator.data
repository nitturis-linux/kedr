# This module implements indicator for capable() functions.

module.author = Tsyvarev
module.license = GPL

global =>>
#include <linux/capability.h>      /* capability constants */
<<

indicator.name = capable

indicator.parameter.type = int
indicator.parameter.name = cap

expression.constant.c_name = CAP_CHOWN
expression.constant.c_name = CAP_DAC_OVERRIDE
expression.constant.c_name = CAP_DAC_READ_SEARCH
expression.constant.c_name = CAP_FOWNER
expression.constant.c_name = CAP_FSETID
expression.constant.c_name = CAP_KILL
expression.constant.c_name = CAP_SETGID
expression.constant.c_name = CAP_SETUID
expression.constant.c_name = CAP_SETPCAP
expression.constant.c_name = CAP_LINUX_IMMUTABLE
expression.constant.c_name = CAP_NET_BIND_SERVICE
expression.constant.c_name = CAP_NET_BROADCAST
expression.constant.c_name = CAP_NET_ADMIN
expression.constant.c_name = CAP_NET_RAW
expression.constant.c_name = CAP_IPC_LOCK
expression.constant.c_name = CAP_IPC_OWNER
expression.constant.c_name = CAP_SYS_MODULE
expression.constant.c_name = CAP_SYS_RAWIO
expression.constant.c_name = CAP_SYS_CHROOT
expression.constant.c_name = CAP_SYS_PTRACE
expression.constant.c_name = CAP_SYS_PACCT
expression.constant.c_name = CAP_SYS_ADMIN
expression.constant.c_name = CAP_SYS_BOOT
expression.constant.c_name = CAP_SYS_NICE
expression.constant.c_name = CAP_SYS_RESOURCE
expression.constant.c_name = CAP_SYS_TIME
expression.constant.c_name = CAP_SYS_TTY_CONFIG
expression.constant.c_name = CAP_MKNOD
expression.constant.c_name = CAP_LEASE
expression.constant.c_name = CAP_AUDIT_WRITE
expression.constant.c_name = CAP_AUDIT_CONTROL
expression.constant.c_name = CAP_SETFCAP
expression.constant.c_name = CAP_MAC_OVERRIDE
expression.constant.c_name = CAP_MAC_ADMIN

expression.variable.pname = cap