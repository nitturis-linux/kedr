#!/bin/sh

module_a_name="module_wobject_a"
module_a="@CMAKE_CURRENT_BINARY_DIR@/module_a/${module_a_name}.ko"

module_a_params_dir="/sys/module/${module_a_name}/parameters"

device="kedr_test_device"

do_commands_script="sh @CMAKE_BINARY_DIR@/tests/scripts/do_commands.sh"
char_device_script="sh @CMAKE_BINARY_DIR@/tests/scripts/char_device.sh"

commands_file="@CMAKE_CURRENT_BINARY_DIR@/commands"

####################  Indicators  ####################
is_obj_live()
{
    test "`cat \"$module_a_params_dir/obj_live\"`" != "0"
}

is_weak_ref_live()
{
    test "`cat \"$module_a_params_dir/weak_ref_live\"`" != "0"
}

is_callback_was_called()
{
    test "`cat \"$module_a_params_dir/callback_was_called\"`" != "0"
}

##
read_command()
{
    dd if=/dev/$device of=/dev/null bs=$1 count=1
}
write_command()
{
    dd of=/dev/$device if=/dev/zero bs=$1 count=1
}

###############   Commands   ################
obj_init()
{
    read_command 1
}
obj_ref()
{
    read_command 2
}
obj_unref()
{
    read_command 3
}
obj_unref_final()
{
    read_command 4
}
#
weak_ref_init()
{
    write_command 1
}
weak_ref_ref()
{
    write_command 2
}
weak_ref_clear()
{
    write_command 3
}
### Helpers
test_number=0
test_failed()
{
    printf "Test %s fail.\n" "$test_number"
    $do_commands_script "$commands_file" unload
    exit 1
}

## Initialize test
cat > $commands_file << eof
on_load insmod "$module_a" || ! printf "Cannot load module for test into kernel.\n"
on_unload rmmod "$module_a" || ! printf "Cannot unload module for test.\n"
on_load $char_device_script "$device" create || ! printf "Cannot create device file for test.\n"
on_unload $char_device_script "$device" delete || ! printf "Cannot remove device file for test.\n"
eof

if ! $do_commands_script "$commands_file" load; then
    printf "Cannot initialize test.\n"
    exit 1
fi
############## Test cases #####################

###
test_number=1

obj_init && obj_unref && ! is_obj_live
if test $? -ne 0; then
    test_failed
fi


###
test_number=2

obj_init && obj_ref && obj_unref && is_obj_live
if test $? -ne 0; then
    test_failed
fi

###
test_number=3

obj_init && obj_unref_final && ! is_obj_live
if test $? -ne 0; then
    test_failed
fi
###
test_number=4

touch ./test_4_tmp
obj_init && obj_ref

( obj_unref_final && ! is_obj_live && rm -f "./test_4_tmp"; ) &

sleep 1
obj_unref
wait

if test -e "./test_4_tmp"; then
    test_failed
fi

##
test_number=5



## Finalize test
if ! $do_commands_script "$commands_file" unload; then
    printf "Error occures while initialize test.\n"
    exit 1
fi