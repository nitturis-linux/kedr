# Makefile.in generated by automake 1.11 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/mist_engine
pkgincludedir = $(includedir)/mist_engine
pkglibdir = $(libdir)/mist_engine
pkglibexecdir = $(libexecdir)/mist_engine
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = mist_engine$(EXEEXT)
am__append_1 = -fPIC
am__append_2 = \
	-Wl,-soname,$(MIST_LIB_SONAME)	\
	-Wl,-z,defs	\
	-Wl,--version-script=$(VERSION_SCRIPT)

am__append_3 = -fvisibility=hidden
#am__append_4 = -DMKDIR_ONE_ARG
#am__append_5 = -DMKDIR_ONE_ARG
#am__append_6 = \
#	-Wl,--out-implib,$(MIST_IMPLIB_GCC)	\
#	-Wl,--output-def,$(MIST_DEF_FILE)

#am__append_7 = \
#	$(MIST_DEF_FILE) \
#	$(MIST_IMPLIB_GCC)

#am__append_8 = \
#	$(MIST_DEF_FILE) \
#	$(MIST_IMPLIB_GCC)

##am__append_9 = $(MIST_IMPLIB_MS)
##am__append_10 = $(MIST_IMPLIB_MS)
##am__append_11 = $(MIST_IMPLIB_MS)
#am__append_12 = \
#	mist_engine-win32-res.$(OBJEXT)

subdir = src
DIST_COMMON = $(mist_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/mist_engine.h.in \
	$(srcdir)/mist_engine.rc.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = mist_engine.h mist_engine.rc
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
libmist_engine_impl_a_AR = $(AR) $(ARFLAGS)
libmist_engine_impl_a_LIBADD =
am__objects_1 =
am_libmist_engine_impl_a_OBJECTS =  \
	libmist_engine_impl_a-grar.$(OBJEXT) \
	libmist_engine_impl_a-mist_base.$(OBJEXT) \
	libmist_engine_impl_a-mist_file_utils.$(OBJEXT) \
	libmist_engine_impl_a-mist_string_utils.$(OBJEXT) \
	libmist_engine_impl_a-smap.$(OBJEXT) \
	libmist_engine_impl_a-mist_engine.$(OBJEXT) $(am__objects_1) \
	$(am__objects_1)
libmist_engine_impl_a_OBJECTS = $(am_libmist_engine_impl_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(mistdir)"
PROGRAMS = $(bin_PROGRAMS)
am_mist_engine_OBJECTS = mist_engine-main.$(OBJEXT) \
	mist_engine-grar.$(OBJEXT) mist_engine-mist_base.$(OBJEXT) \
	mist_engine-mist_file_utils.$(OBJEXT) \
	mist_engine-mist_string_utils.$(OBJEXT) \
	mist_engine-mist_exec.$(OBJEXT) mist_engine-smap.$(OBJEXT)
mist_engine_OBJECTS = $(am_mist_engine_OBJECTS)
mist_engine_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libmist_engine_impl_a_SOURCES) $(mist_engine_SOURCES)
DIST_SOURCES = $(libmist_engine_impl_a_SOURCES) $(mist_engine_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
HEADERS = $(mist_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine/build-aux/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine/build-aux/missing --run tar
AUTOCONF = ${SHELL} /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine/build-aux/missing --run automake-1.11
AWK = mawk
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CC_PLAIN = gcc
CFLAGS = -Wall -g -O2 -DNDEBUG
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine/build-aux/missing --run makeinfo
MIST_ENGINE_VERSION_MAJOR = 1
MIST_ENGINE_VERSION_MICRO = 0
MIST_ENGINE_VERSION_MINOR = 0
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = mist_engine
PACKAGE_BUGREPORT = http://sourceforge.net/projects/template2code/develop
PACKAGE_NAME = mist_engine
PACKAGE_STRING = mist_engine 1.0.0_final
PACKAGE_TARNAME = mist_engine
PACKAGE_VERSION = 1.0.0_final
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.0.0_final
WINDRES = 
WIN_MACHINE_ARCH = X86
abs_builddir = /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine/src
abs_srcdir = /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine/src
abs_top_builddir = /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine
abs_top_srcdir = /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/andrew/work/cmake/kedr_snippet/mist_gen/src/mist_engine/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
ms_lib_exe = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/andrew/work/cmake/kedr_snippet/mist_gen/mist_engine
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
MIST_LIB_NAME = mist_engine
MIST_VERSION = $(MIST_ENGINE_VERSION_MAJOR).$(MIST_ENGINE_VERSION_MINOR).$(MIST_ENGINE_VERSION_MICRO)
VERSION_SCRIPT = $(srcdir)/versions.ldscript
mist_engine_SOURCES = \
	main.c		\
	grar.c		\
	mist_base.c	\
	mist_file_utils.c	\
	mist_string_utils.c	\
	mist_exec.c			\
	smap.c				\
	about.h				\
	grar.h				\
	mist_base.h			\
	mist_errors.h		\
	mist_file_utils.h	\
	mist_string_utils.h	\
	mist_exec.h	\
	smap.h	

mist_engine_CPPFLAGS = $(am__append_5)

###########################################################################
# Platform-dependent stuff
ADD_COMPILER_FLAGS = $(am__append_1) $(am__append_3) $(am__append_4)
ADD_LINKER_FLAGS = $(am__append_2) $(am__append_6)

# Additional files to be built
ADD_BUILD_FILES = $(am__append_9)

# Additional files to be removed during cleanup
ADD_CLEAN_FILES = $(am__append_8) $(am__append_11)

# The files to be installed (in addition to the library itself)
ADD_INSTALL_FILES = $(am__append_7) $(am__append_10)

# Only Linux and Microsoft Windows systems are currently supported
MIST_LIB_FILE = lib$(MIST_LIB_NAME).so.$(MIST_VERSION)
#MIST_LIB_FILE = $(MIST_LIB_NAME).dll
MIST_LIB_SONAME = lib$(MIST_LIB_NAME).so.$(MIST_ENGINE_VERSION_MAJOR)
#MIST_DEF_FILE = $(MIST_LIB_NAME).def

# Import library for the programs built with GCC
#MIST_IMPLIB_GCC = lib$(MIST_LIB_NAME).a

# Import library for the programs built with Microsoft tools
#MIST_IMPLIB_MS = $(MIST_LIB_NAME).lib
#MAKE_SYMLINKS = 
MAKE_SYMLINKS = \
	$(LN_S) "$(DESTDIR)$(libdir)/$(MIST_LIB_FILE)" "$(DESTDIR)$(libdir)/$(MIST_LIB_SONAME)" && \
	$(LN_S) "$(DESTDIR)$(libdir)/$(MIST_LIB_FILE)" "$(DESTDIR)$(libdir)/lib$(MIST_LIB_NAME).so"

#RM_SYMLINKS = 
RM_SYMLINKS = \
	rm -f "$(DESTDIR)$(libdir)/$(MIST_LIB_SONAME)" "$(DESTDIR)$(libdir)/lib$(MIST_LIB_NAME).so"

###########################################################################

# A custom directory for headers
mistdir = $(includedir)/$(PACKAGE_NAME)
PRIVATE_HEADER_FILES = \
	grar.h				\
	mist_base.h			\
	mist_file_utils.h	\
	mist_string_utils.h	\
	smap.h				

mist_HEADERS = \
	mist_engine.h	\
	mist_errors.h		


# This is just for Automake to generate rules to prepare necessary
# object files (see MIST_OBJ_FILES below).
# The library itself should never be used.
noinst_LIBRARIES = libmist_engine_impl.a
libmist_engine_impl_a_SOURCES = \
	grar.c		\
	mist_base.c	\
	mist_file_utils.c	\
	mist_string_utils.c	\
	smap.c				\
	mist_engine.c \
	$(mist_HEADERS) \
	$(PRIVATE_HEADER_FILES)

libmist_engine_impl_a_CFLAGS = \
	-Wall -DMIST_ENGINE_DLL_EXPORTS $(ADD_COMPILER_FLAGS)

OBJPREFIX = libmist_engine_impl_a

# The list of object files needed to create the library
MIST_OBJ_FILES = $(OBJPREFIX)-grar.$(OBJEXT) \
	$(OBJPREFIX)-mist_base.$(OBJEXT) \
	$(OBJPREFIX)-mist_file_utils.$(OBJEXT) \
	$(OBJPREFIX)-mist_string_utils.$(OBJEXT) \
	$(OBJPREFIX)-smap.$(OBJEXT) $(OBJPREFIX)-mist_engine.$(OBJEXT) \
	$(am__append_12)

# Additional files to be distributed
ADD_EXTRA_DIST = \
	mist_engine.rc

EXTRA_DIST = \
	mist_engine.h.in 	\
	mist_engine.rc.in	\
	$(ADD_EXTRA_DIST)	\
	$(VERSION_SCRIPT)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
mist_engine.h: $(top_builddir)/config.status $(srcdir)/mist_engine.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
mist_engine.rc: $(top_builddir)/config.status $(srcdir)/mist_engine.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libmist_engine_impl.a: $(libmist_engine_impl_a_OBJECTS) $(libmist_engine_impl_a_DEPENDENCIES) 
	-rm -f libmist_engine_impl.a
	$(libmist_engine_impl_a_AR) libmist_engine_impl.a $(libmist_engine_impl_a_OBJECTS) $(libmist_engine_impl_a_LIBADD)
	$(RANLIB) libmist_engine_impl.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
mist_engine$(EXEEXT): $(mist_engine_OBJECTS) $(mist_engine_DEPENDENCIES) 
	@rm -f mist_engine$(EXEEXT)
	$(LINK) $(mist_engine_OBJECTS) $(mist_engine_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libmist_engine_impl_a-grar.Po
include ./$(DEPDIR)/libmist_engine_impl_a-mist_base.Po
include ./$(DEPDIR)/libmist_engine_impl_a-mist_engine.Po
include ./$(DEPDIR)/libmist_engine_impl_a-mist_file_utils.Po
include ./$(DEPDIR)/libmist_engine_impl_a-mist_string_utils.Po
include ./$(DEPDIR)/libmist_engine_impl_a-smap.Po
include ./$(DEPDIR)/mist_engine-grar.Po
include ./$(DEPDIR)/mist_engine-main.Po
include ./$(DEPDIR)/mist_engine-mist_base.Po
include ./$(DEPDIR)/mist_engine-mist_exec.Po
include ./$(DEPDIR)/mist_engine-mist_file_utils.Po
include ./$(DEPDIR)/mist_engine-mist_string_utils.Po
include ./$(DEPDIR)/mist_engine-smap.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

libmist_engine_impl_a-grar.o: grar.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-grar.o -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-grar.Tpo -c -o libmist_engine_impl_a-grar.o `test -f 'grar.c' || echo '$(srcdir)/'`grar.c
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-grar.Tpo $(DEPDIR)/libmist_engine_impl_a-grar.Po
#	source='grar.c' object='libmist_engine_impl_a-grar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-grar.o `test -f 'grar.c' || echo '$(srcdir)/'`grar.c

libmist_engine_impl_a-grar.obj: grar.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-grar.obj -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-grar.Tpo -c -o libmist_engine_impl_a-grar.obj `if test -f 'grar.c'; then $(CYGPATH_W) 'grar.c'; else $(CYGPATH_W) '$(srcdir)/grar.c'; fi`
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-grar.Tpo $(DEPDIR)/libmist_engine_impl_a-grar.Po
#	source='grar.c' object='libmist_engine_impl_a-grar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-grar.obj `if test -f 'grar.c'; then $(CYGPATH_W) 'grar.c'; else $(CYGPATH_W) '$(srcdir)/grar.c'; fi`

libmist_engine_impl_a-mist_base.o: mist_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-mist_base.o -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-mist_base.Tpo -c -o libmist_engine_impl_a-mist_base.o `test -f 'mist_base.c' || echo '$(srcdir)/'`mist_base.c
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-mist_base.Tpo $(DEPDIR)/libmist_engine_impl_a-mist_base.Po
#	source='mist_base.c' object='libmist_engine_impl_a-mist_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-mist_base.o `test -f 'mist_base.c' || echo '$(srcdir)/'`mist_base.c

libmist_engine_impl_a-mist_base.obj: mist_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-mist_base.obj -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-mist_base.Tpo -c -o libmist_engine_impl_a-mist_base.obj `if test -f 'mist_base.c'; then $(CYGPATH_W) 'mist_base.c'; else $(CYGPATH_W) '$(srcdir)/mist_base.c'; fi`
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-mist_base.Tpo $(DEPDIR)/libmist_engine_impl_a-mist_base.Po
#	source='mist_base.c' object='libmist_engine_impl_a-mist_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-mist_base.obj `if test -f 'mist_base.c'; then $(CYGPATH_W) 'mist_base.c'; else $(CYGPATH_W) '$(srcdir)/mist_base.c'; fi`

libmist_engine_impl_a-mist_file_utils.o: mist_file_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-mist_file_utils.o -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-mist_file_utils.Tpo -c -o libmist_engine_impl_a-mist_file_utils.o `test -f 'mist_file_utils.c' || echo '$(srcdir)/'`mist_file_utils.c
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-mist_file_utils.Tpo $(DEPDIR)/libmist_engine_impl_a-mist_file_utils.Po
#	source='mist_file_utils.c' object='libmist_engine_impl_a-mist_file_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-mist_file_utils.o `test -f 'mist_file_utils.c' || echo '$(srcdir)/'`mist_file_utils.c

libmist_engine_impl_a-mist_file_utils.obj: mist_file_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-mist_file_utils.obj -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-mist_file_utils.Tpo -c -o libmist_engine_impl_a-mist_file_utils.obj `if test -f 'mist_file_utils.c'; then $(CYGPATH_W) 'mist_file_utils.c'; else $(CYGPATH_W) '$(srcdir)/mist_file_utils.c'; fi`
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-mist_file_utils.Tpo $(DEPDIR)/libmist_engine_impl_a-mist_file_utils.Po
#	source='mist_file_utils.c' object='libmist_engine_impl_a-mist_file_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-mist_file_utils.obj `if test -f 'mist_file_utils.c'; then $(CYGPATH_W) 'mist_file_utils.c'; else $(CYGPATH_W) '$(srcdir)/mist_file_utils.c'; fi`

libmist_engine_impl_a-mist_string_utils.o: mist_string_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-mist_string_utils.o -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-mist_string_utils.Tpo -c -o libmist_engine_impl_a-mist_string_utils.o `test -f 'mist_string_utils.c' || echo '$(srcdir)/'`mist_string_utils.c
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-mist_string_utils.Tpo $(DEPDIR)/libmist_engine_impl_a-mist_string_utils.Po
#	source='mist_string_utils.c' object='libmist_engine_impl_a-mist_string_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-mist_string_utils.o `test -f 'mist_string_utils.c' || echo '$(srcdir)/'`mist_string_utils.c

libmist_engine_impl_a-mist_string_utils.obj: mist_string_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-mist_string_utils.obj -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-mist_string_utils.Tpo -c -o libmist_engine_impl_a-mist_string_utils.obj `if test -f 'mist_string_utils.c'; then $(CYGPATH_W) 'mist_string_utils.c'; else $(CYGPATH_W) '$(srcdir)/mist_string_utils.c'; fi`
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-mist_string_utils.Tpo $(DEPDIR)/libmist_engine_impl_a-mist_string_utils.Po
#	source='mist_string_utils.c' object='libmist_engine_impl_a-mist_string_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-mist_string_utils.obj `if test -f 'mist_string_utils.c'; then $(CYGPATH_W) 'mist_string_utils.c'; else $(CYGPATH_W) '$(srcdir)/mist_string_utils.c'; fi`

libmist_engine_impl_a-smap.o: smap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-smap.o -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-smap.Tpo -c -o libmist_engine_impl_a-smap.o `test -f 'smap.c' || echo '$(srcdir)/'`smap.c
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-smap.Tpo $(DEPDIR)/libmist_engine_impl_a-smap.Po
#	source='smap.c' object='libmist_engine_impl_a-smap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-smap.o `test -f 'smap.c' || echo '$(srcdir)/'`smap.c

libmist_engine_impl_a-smap.obj: smap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-smap.obj -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-smap.Tpo -c -o libmist_engine_impl_a-smap.obj `if test -f 'smap.c'; then $(CYGPATH_W) 'smap.c'; else $(CYGPATH_W) '$(srcdir)/smap.c'; fi`
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-smap.Tpo $(DEPDIR)/libmist_engine_impl_a-smap.Po
#	source='smap.c' object='libmist_engine_impl_a-smap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-smap.obj `if test -f 'smap.c'; then $(CYGPATH_W) 'smap.c'; else $(CYGPATH_W) '$(srcdir)/smap.c'; fi`

libmist_engine_impl_a-mist_engine.o: mist_engine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-mist_engine.o -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-mist_engine.Tpo -c -o libmist_engine_impl_a-mist_engine.o `test -f 'mist_engine.c' || echo '$(srcdir)/'`mist_engine.c
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-mist_engine.Tpo $(DEPDIR)/libmist_engine_impl_a-mist_engine.Po
#	source='mist_engine.c' object='libmist_engine_impl_a-mist_engine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-mist_engine.o `test -f 'mist_engine.c' || echo '$(srcdir)/'`mist_engine.c

libmist_engine_impl_a-mist_engine.obj: mist_engine.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -MT libmist_engine_impl_a-mist_engine.obj -MD -MP -MF $(DEPDIR)/libmist_engine_impl_a-mist_engine.Tpo -c -o libmist_engine_impl_a-mist_engine.obj `if test -f 'mist_engine.c'; then $(CYGPATH_W) 'mist_engine.c'; else $(CYGPATH_W) '$(srcdir)/mist_engine.c'; fi`
	$(am__mv) $(DEPDIR)/libmist_engine_impl_a-mist_engine.Tpo $(DEPDIR)/libmist_engine_impl_a-mist_engine.Po
#	source='mist_engine.c' object='libmist_engine_impl_a-mist_engine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmist_engine_impl_a_CFLAGS) $(CFLAGS) -c -o libmist_engine_impl_a-mist_engine.obj `if test -f 'mist_engine.c'; then $(CYGPATH_W) 'mist_engine.c'; else $(CYGPATH_W) '$(srcdir)/mist_engine.c'; fi`

mist_engine-main.o: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-main.o -MD -MP -MF $(DEPDIR)/mist_engine-main.Tpo -c -o mist_engine-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(am__mv) $(DEPDIR)/mist_engine-main.Tpo $(DEPDIR)/mist_engine-main.Po
#	source='main.c' object='mist_engine-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

mist_engine-main.obj: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-main.obj -MD -MP -MF $(DEPDIR)/mist_engine-main.Tpo -c -o mist_engine-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(am__mv) $(DEPDIR)/mist_engine-main.Tpo $(DEPDIR)/mist_engine-main.Po
#	source='main.c' object='mist_engine-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

mist_engine-grar.o: grar.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-grar.o -MD -MP -MF $(DEPDIR)/mist_engine-grar.Tpo -c -o mist_engine-grar.o `test -f 'grar.c' || echo '$(srcdir)/'`grar.c
	$(am__mv) $(DEPDIR)/mist_engine-grar.Tpo $(DEPDIR)/mist_engine-grar.Po
#	source='grar.c' object='mist_engine-grar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-grar.o `test -f 'grar.c' || echo '$(srcdir)/'`grar.c

mist_engine-grar.obj: grar.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-grar.obj -MD -MP -MF $(DEPDIR)/mist_engine-grar.Tpo -c -o mist_engine-grar.obj `if test -f 'grar.c'; then $(CYGPATH_W) 'grar.c'; else $(CYGPATH_W) '$(srcdir)/grar.c'; fi`
	$(am__mv) $(DEPDIR)/mist_engine-grar.Tpo $(DEPDIR)/mist_engine-grar.Po
#	source='grar.c' object='mist_engine-grar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-grar.obj `if test -f 'grar.c'; then $(CYGPATH_W) 'grar.c'; else $(CYGPATH_W) '$(srcdir)/grar.c'; fi`

mist_engine-mist_base.o: mist_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-mist_base.o -MD -MP -MF $(DEPDIR)/mist_engine-mist_base.Tpo -c -o mist_engine-mist_base.o `test -f 'mist_base.c' || echo '$(srcdir)/'`mist_base.c
	$(am__mv) $(DEPDIR)/mist_engine-mist_base.Tpo $(DEPDIR)/mist_engine-mist_base.Po
#	source='mist_base.c' object='mist_engine-mist_base.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-mist_base.o `test -f 'mist_base.c' || echo '$(srcdir)/'`mist_base.c

mist_engine-mist_base.obj: mist_base.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-mist_base.obj -MD -MP -MF $(DEPDIR)/mist_engine-mist_base.Tpo -c -o mist_engine-mist_base.obj `if test -f 'mist_base.c'; then $(CYGPATH_W) 'mist_base.c'; else $(CYGPATH_W) '$(srcdir)/mist_base.c'; fi`
	$(am__mv) $(DEPDIR)/mist_engine-mist_base.Tpo $(DEPDIR)/mist_engine-mist_base.Po
#	source='mist_base.c' object='mist_engine-mist_base.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-mist_base.obj `if test -f 'mist_base.c'; then $(CYGPATH_W) 'mist_base.c'; else $(CYGPATH_W) '$(srcdir)/mist_base.c'; fi`

mist_engine-mist_file_utils.o: mist_file_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-mist_file_utils.o -MD -MP -MF $(DEPDIR)/mist_engine-mist_file_utils.Tpo -c -o mist_engine-mist_file_utils.o `test -f 'mist_file_utils.c' || echo '$(srcdir)/'`mist_file_utils.c
	$(am__mv) $(DEPDIR)/mist_engine-mist_file_utils.Tpo $(DEPDIR)/mist_engine-mist_file_utils.Po
#	source='mist_file_utils.c' object='mist_engine-mist_file_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-mist_file_utils.o `test -f 'mist_file_utils.c' || echo '$(srcdir)/'`mist_file_utils.c

mist_engine-mist_file_utils.obj: mist_file_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-mist_file_utils.obj -MD -MP -MF $(DEPDIR)/mist_engine-mist_file_utils.Tpo -c -o mist_engine-mist_file_utils.obj `if test -f 'mist_file_utils.c'; then $(CYGPATH_W) 'mist_file_utils.c'; else $(CYGPATH_W) '$(srcdir)/mist_file_utils.c'; fi`
	$(am__mv) $(DEPDIR)/mist_engine-mist_file_utils.Tpo $(DEPDIR)/mist_engine-mist_file_utils.Po
#	source='mist_file_utils.c' object='mist_engine-mist_file_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-mist_file_utils.obj `if test -f 'mist_file_utils.c'; then $(CYGPATH_W) 'mist_file_utils.c'; else $(CYGPATH_W) '$(srcdir)/mist_file_utils.c'; fi`

mist_engine-mist_string_utils.o: mist_string_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-mist_string_utils.o -MD -MP -MF $(DEPDIR)/mist_engine-mist_string_utils.Tpo -c -o mist_engine-mist_string_utils.o `test -f 'mist_string_utils.c' || echo '$(srcdir)/'`mist_string_utils.c
	$(am__mv) $(DEPDIR)/mist_engine-mist_string_utils.Tpo $(DEPDIR)/mist_engine-mist_string_utils.Po
#	source='mist_string_utils.c' object='mist_engine-mist_string_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-mist_string_utils.o `test -f 'mist_string_utils.c' || echo '$(srcdir)/'`mist_string_utils.c

mist_engine-mist_string_utils.obj: mist_string_utils.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-mist_string_utils.obj -MD -MP -MF $(DEPDIR)/mist_engine-mist_string_utils.Tpo -c -o mist_engine-mist_string_utils.obj `if test -f 'mist_string_utils.c'; then $(CYGPATH_W) 'mist_string_utils.c'; else $(CYGPATH_W) '$(srcdir)/mist_string_utils.c'; fi`
	$(am__mv) $(DEPDIR)/mist_engine-mist_string_utils.Tpo $(DEPDIR)/mist_engine-mist_string_utils.Po
#	source='mist_string_utils.c' object='mist_engine-mist_string_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-mist_string_utils.obj `if test -f 'mist_string_utils.c'; then $(CYGPATH_W) 'mist_string_utils.c'; else $(CYGPATH_W) '$(srcdir)/mist_string_utils.c'; fi`

mist_engine-mist_exec.o: mist_exec.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-mist_exec.o -MD -MP -MF $(DEPDIR)/mist_engine-mist_exec.Tpo -c -o mist_engine-mist_exec.o `test -f 'mist_exec.c' || echo '$(srcdir)/'`mist_exec.c
	$(am__mv) $(DEPDIR)/mist_engine-mist_exec.Tpo $(DEPDIR)/mist_engine-mist_exec.Po
#	source='mist_exec.c' object='mist_engine-mist_exec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-mist_exec.o `test -f 'mist_exec.c' || echo '$(srcdir)/'`mist_exec.c

mist_engine-mist_exec.obj: mist_exec.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-mist_exec.obj -MD -MP -MF $(DEPDIR)/mist_engine-mist_exec.Tpo -c -o mist_engine-mist_exec.obj `if test -f 'mist_exec.c'; then $(CYGPATH_W) 'mist_exec.c'; else $(CYGPATH_W) '$(srcdir)/mist_exec.c'; fi`
	$(am__mv) $(DEPDIR)/mist_engine-mist_exec.Tpo $(DEPDIR)/mist_engine-mist_exec.Po
#	source='mist_exec.c' object='mist_engine-mist_exec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-mist_exec.obj `if test -f 'mist_exec.c'; then $(CYGPATH_W) 'mist_exec.c'; else $(CYGPATH_W) '$(srcdir)/mist_exec.c'; fi`

mist_engine-smap.o: smap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-smap.o -MD -MP -MF $(DEPDIR)/mist_engine-smap.Tpo -c -o mist_engine-smap.o `test -f 'smap.c' || echo '$(srcdir)/'`smap.c
	$(am__mv) $(DEPDIR)/mist_engine-smap.Tpo $(DEPDIR)/mist_engine-smap.Po
#	source='smap.c' object='mist_engine-smap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-smap.o `test -f 'smap.c' || echo '$(srcdir)/'`smap.c

mist_engine-smap.obj: smap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mist_engine-smap.obj -MD -MP -MF $(DEPDIR)/mist_engine-smap.Tpo -c -o mist_engine-smap.obj `if test -f 'smap.c'; then $(CYGPATH_W) 'smap.c'; else $(CYGPATH_W) '$(srcdir)/smap.c'; fi`
	$(am__mv) $(DEPDIR)/mist_engine-smap.Tpo $(DEPDIR)/mist_engine-smap.Po
#	source='smap.c' object='mist_engine-smap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mist_engine_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mist_engine-smap.obj `if test -f 'smap.c'; then $(CYGPATH_W) 'smap.c'; else $(CYGPATH_W) '$(srcdir)/smap.c'; fi`
install-mistHEADERS: $(mist_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(mistdir)" || $(MKDIR_P) "$(DESTDIR)$(mistdir)"
	@list='$(mist_HEADERS)'; test -n "$(mistdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(mistdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(mistdir)" || exit $$?; \
	done

uninstall-mistHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(mist_HEADERS)'; test -n "$(mistdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(mistdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(mistdir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(mistdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-mistHEADERS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-local \
	uninstall-mistHEADERS

.MAKE: install-am install-data-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-binPROGRAMS clean-generic clean-local \
	clean-noinstLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-data-hook install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-mistHEADERS install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-local uninstall-mistHEADERS


###########################################################################
# Custom build rules
all-local: $(MIST_LIB_FILE) $(ADD_BUILD_FILES)

clean-local: 
		-rm -f $(MIST_LIB_FILE) *.exp *.$(OBJEXT) $(ADD_CLEAN_FILES)

$(MIST_LIB_FILE): $(MIST_OBJ_FILES) $(PRIVATE_HEADER_FILES) $(mist_HEADERS) $(VERSION_SCRIPT)
		$(CC_PLAIN) -shared $(ADD_LINKER_FLAGS) -o $@ $(MIST_OBJ_FILES)

# Compile resources for the DLL
#mist_engine-win32-res.$(OBJEXT): mist_engine.rc
#		$(WINDRES) $< $@

# Generate import library
##$(MIST_IMPLIB_MS): $(MIST_LIB_FILE) $(MIST_DEF_FILE)
##		lib -machine:X86 -name:$(MIST_LIB_FILE) -def:$(MIST_DEF_FILE) -out:$@

###########################################################################
# Custom install / uninstall rules
install-data-hook: $(MIST_LIB_FILE) $(ADD_INSTALL_FILES)
		$(mkinstalldirs) "$(DESTDIR)$(libdir)"
		$(INSTALL_DATA) $(MIST_LIB_FILE) "$(DESTDIR)$(libdir)"
		for f in $(ADD_INSTALL_FILES); do \
			if test -f "$(srcdir)/$$f"; then p="$(srcdir)/$$f"; else p="$$f"; fi; \
			$(INSTALL_DATA) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
		done
		$(MAKE_SYMLINKS)

uninstall-local:
		-rm -f "$(DESTDIR)$(libdir)/$(MIST_LIB_FILE)"
		for f in $(ADD_INSTALL_FILES); do \
			rm -f "$(DESTDIR)$(libdir)/$$f"; \
		done
		$(RM_SYMLINKS)
#		-rm -r "$(DESTDIR)$(mistdir)"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
